import os
import openai
import streamlit as st
import requests
from bs4 import BeautifulSoup
import markdownify

from components.sidebar import sidebar

st.set_page_config(
    page_title="Khlinic writer",
    page_icon="üñäÔ∏è",
)


st.header("üñäÔ∏è Khlinic writer")
st.markdown("---")

if "shared" not in st.session_state:
   st.session_state["shared"] = True

sidebar()

openai.api_key = st.session_state.get("OPENAI_API_KEY")

st.markdown("### Allons explorer les meilleures pages des concurrents üëÄ")
with st.expander("Concurrence", expanded=True):
    link_1 = st.text_input("Lien 1", placeholder="Lien concurrent #1")
    link_2 = st.text_input("Lien 2", placeholder="Lien concurrent #2")
    link_3 = st.text_input("Lien 3", placeholder="Lien concurrent #3")
    col1, col2, col3 = st.columns([2, 2,1])
    submit = col3.button("Scrapper üè¥‚Äç‚ò†Ô∏è", use_container_width=1)

def parser(link):
    res = requests.get(link)
    html_page = res.content
    soup = BeautifulSoup(html_page, 'html.parser')
    text = soup.find_all(text=True)
    output = ''
    blacklist = ['[document]','noscript','header','html','meta','head', 'input','script','style'
        # there may be more elements you don't want, such as "style", etc.
    ]
    for t in text:
        if t.parent.name not in blacklist:
            output += '{} '.format(t)
    return output
def concurrent_analyzer(text):
    response = openai.ChatCompletion.create(
        model="gpt-4",
        temperature=st.session_state.get("TEMPERATURE"),
        max_tokens=st.session_state.get("MAX_TOKENS"),
        top_p=1,
        frequency_penalty=st.session_state.get("FREQUENCY_PENALTY"),
        presence_penalty=st.session_state.get("PRESENCE_PENALTY"),
        messages=[{"role": "system", "content": "Ignore toutes les instructions avant celle-ci. Tu es un r√©dacteur web expert en m√©dical. Tu as r√©dig√© des articles m√©dicaux pour les sites de m√©decins depuis 20 ans. Ta t√¢che est maintenant de r√©diger un article m√©dical. Les internautes qui consulteront cette page chercheront principalement √† prendre des informations sur ce sujet avant de prendre rendez-vous chez leur m√©decine. Voici le ton de la marque pour laquelle tu devras r√©diger : Le ton de la marque est hautement professionnel et informatif. La marque communique de mani√®re d√©taill√©e, directe et pr√©cise, fournissant des informations compl√®tes √† son public. Il y a un √©l√©ment de soin et de consid√©ration notable, trouvant un √©quilibre entre les conseils formels d'un professionnel de la sant√© et une communication empathique. Les attributs de langage gravitent autour de la terminologie m√©dicale, du langage orient√© vers la sant√©, des explications m√©thodiques et une emphase sur les d√©tails. Le persona de la marque semble √™tre celui d'un expert du secteur comp√©tent, fiable et minutieux qui privil√©gie le bien-√™tre des individus qu'il sert. Leur style se concentre sur l'instauration de la confiance, la d√©monstration d'expertise et l'assurance de la transparence dans la communication. Dans un premier temps, j'ai besoin que tu extraies toutes les informations utiles sur cette page sous forme de liste. Concentre-toi sur les informations m√©dicales, biologiques, physiologiques, chirurgicales, historiques et les conseils. Voici le texte √† analyser :"},
                        {"role": "user", "content": text}]
        
    )
    return response["choices"][0]["message"]["content"]
if submit:
    st.success("Test")
    text_1 = parser(link_1)
    response_1 = concurrent_analyzer(text_1)
    st.write(response_1)
